// =============================================================================
// I/O Device mapping for the Saitek ST290 device 
//   -- UsbJoystick (e.g., the saitek) channels are zero(0) based.
// =============================================================================
//
// Notes:
// --
// The throttle needed to be scaled backwards. This is true for most every PC
// joystick. Also, scaled by 2 for afterburner. The DynamicsModels depend on this.
// --
// I picked the natural buttons for TRIGGER_SW2 and PICKLE. Note SW2 not SW1!
// --
// I picked 2 buttons for freeze, reset, and autopilot disconnected.
// --
// Trim: The POV switch on PC joystick would be he trim switch and is 2 AI's,
// not 4 DI's as would be expected. The f16HotasIO.h is mapping it to cursor X/Y AI.
// There are 4 DI slots reserved.  either......
// Create a way to map an AI into 2 DIs. Or reserve 2 AI slots for an analog trim switch.
// Example of the former below:
// ( DigitalFromAnalogInput di: TRIM_PITCH_UP_SW     port: 0  channel:  6 value:  1.0 )
// ( DigitalFromAnalogInput di: TRIM_PITCH_DOWN_SW   port: 0  channel:  6 value: -1.0 )
//
// 2 different DIs are triggered depending of the value of the one AI channel.
// Again, this is only necessary because the PC hoytick POV swtich is an AI and not
// a set of DIs. Else, you can't have a trim switch.

#include "channel_map.hpp"

( UsbJoystick
   deviceIndex: 0
   adapters: {

      // ---
      // AIs (stick & throttle)
      // ---
      ( AnalogInput ai: ROLL_AI           channel: 0  offset: 0.0  gain: 1.0 )
      ( AnalogInput ai: PITCH_AI          channel: 1  offset: 0.0  gain: 1.0 )
      ( AnalogInput ai: THROTTLE_AI       channel: 2  offset: 0.0  gain: -2.0 )
      ( AnalogInput ai: RUDDER_AI         channel: 3  offset: 0.0  gain: 1.0 )

      // ---
      // Stick DIs
      // ---
      ( DiscreteInput di: TRIGGER_SW2     port: 0  channel:  0 )
      ( DiscreteInput di: PICKLE_SW       port: 0  channel:  2 )
      ( DiscreteInput di: PADDLE_SW       port: 0  channel:  3 )

      // ---
      // Sim control DIs
      // ---
      ( DiscreteInput di: FREEZE_SW       port: 0  channel:  4 )  // uncage
      ( DiscreteInput di: RESET_SW        port: 0  channel:  5 )  // IFF out

   }
)
